name: ${{values.app_name}}-cicd

on:
  push:
    paths:
      - src/**
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Declare some variables
        shell: bash
        run: |
          echo "COMMIT_ID=${GITHUB_SHA::6}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ '${{ secrets.DOCKER_USERNAME }}' }}
          password: ${{ '${{ secrets.DOCKER_PASSWORD }}' }}
    
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: bmalmeida/${{values.app_name}}:${{ '${{ env.COMMIT_ID }}' }}
    outputs:
      commit_id: ${{ '${{ env.COMMIT_ID }}' }}
  
  cd:
    needs: ci
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Modify values file
        shell: bash
        run: |
          echo ${{ '${{ needs.ci.outputs.commit_id }}' }}
          pip install yq
          yq -Yi '.image.tag = "${{ '${{ needs.ci.outputs.commit_id }}' }}"' charts/${{values.app_name}}/values-${{values.app_env}}.yaml

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: "Update image tag to ${{ '${{ needs.ci.outputs.commit_id }}' }}"

      - name: Install ArgoCD CLI
        shell: bash
        run: |
          curl -k -sSL -o argocd https://argocd-server.argocd/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/argocd

      - name: Login to ArgoCD
        shell: bash
        run: |
          argocd login argocd-server.argocd \
            --grpc-web \
            --username admin \
            --password ${{ '${{ secrets.ARGOCD_PASSWORD }}' }} \
            --insecure
      
      - name: Ensure argocd repo and app
        shell: bash
        run: |
          repo_url="https://github.com/bruno-melo-almeida/${{values.app_name}}.git"
          argocd repo list \
          | grep -q "$repo_url" || argocd repo add \
          $repo_url \
          --name ${{values.app_name}} \
          --project default

          if ! argocd app get ${{values.app_name}}; then
            argocd app create ${{values.app_name}} \
              --repo $repo_url \
              --path charts/${{values.app_name}} \
              --dest-server https://kubernetes.default.svc \
              --values values-${{values.app_env}}.yaml \
              --revision main \
              --sync-policy manual \
              --sync-option CreateNamespace=true \
              --dest-namespace ${{values.app_env}}
          fi

      - name: Argocd app sync
        shell: bash
        run: |
          argocd login argocd-server.argocd \
            --grpc-web \
            --username admin \
            --password ${{ '${{ secrets.ARGOCD_PASSWORD }}' }} \
            --insecure
          argocd app sync ${{values.app_name}}
          argocd app wait ${{values.app_name}} --timeout 100